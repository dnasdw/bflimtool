cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
project(bflimtool)
if(MSVC11)
  set(CMAKE_GENERATOR_TOOLSET "v110_xp" CACHE STRING "Name of generator toolset." FORCE)
endif()
if(MSVC12)
  set(CMAKE_GENERATOR_TOOLSET "v120_xp" CACHE STRING "Name of generator toolset." FORCE)
endif()
set(BFLIMTOOL_MAJOR 1)
set(BFLIMTOOL_MINOR 0)
set(BFLIMTOOL_PATCHLEVEL 0)
if(UNIX)
  set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel." FORCE)
endif()
option(BUILD64 "Build x86_64(unix only)" ON)
set(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}")
set(ROOT_SOURCE_DIR "${PROJECT_SOURCE_DIR}")
set(COMMON_INCLUDE_DIR "${ROOT_SOURCE_DIR}/dep/include")
if(WIN32)
  if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(COMMON_INCLUDE_DIR ${COMMON_INCLUDE_DIR} "${ROOT_SOURCE_DIR}/dep/include/Windows_x86_64")
    set(COMMON_LIBRARY_DIR "${ROOT_SOURCE_DIR}/dep/lib/Windows_x86_64")
  else()
    set(COMMON_INCLUDE_DIR ${COMMON_INCLUDE_DIR} "${ROOT_SOURCE_DIR}/dep/include/Windows_x86_32")
    set(COMMON_LIBRARY_DIR "${ROOT_SOURCE_DIR}/dep/lib/Windows_x86_32")
  endif()
else()
  if(APPLE)
    set(COMMON_INCLUDE_DIR ${COMMON_INCLUDE_DIR} "${ROOT_SOURCE_DIR}/dep/include/OSX_x86")
    set(COMMON_LIBRARY_DIR "${ROOT_SOURCE_DIR}/dep/lib/OSX_x86")
  else()
    if(BUILD64)
      set(COMMON_INCLUDE_DIR ${COMMON_INCLUDE_DIR} "${ROOT_SOURCE_DIR}/dep/include/Linux_x86_64")
      set(COMMON_LIBRARY_DIR "${ROOT_SOURCE_DIR}/dep/lib/Linux_x86_64")
    else()
      set(COMMON_INCLUDE_DIR ${COMMON_INCLUDE_DIR} "${ROOT_SOURCE_DIR}/dep/include/Linux_x86_32")
      set(COMMON_LIBRARY_DIR "${ROOT_SOURCE_DIR}/dep/lib/Linux_x86_32")
    endif()
  endif()
endif()
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${ROOT_SOURCE_DIR}/cmake")
include(AddTarget)
include(AutoFiles)
if(UNIX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  if(BUILD64)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
  else()
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
  endif()
endif()
if(WIN32)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
else()
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}")
endif()
add_definitions(-DBFLIMTOOL_VERSION="${BFLIMTOOL_MAJOR}.${BFLIMTOOL_MINOR}.${BFLIMTOOL_PATCHLEVEL}")
if(WIN32)
  add_definitions(-D_CRT_SECURE_NO_WARNINGS)
else()
  add_definitions(-D_FILE_OFFSET_BITS=64 -Wno-multichar -Wno-unused-result)
endif()
add_subdirectory(src)
